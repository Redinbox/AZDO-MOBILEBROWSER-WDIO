# Node.js

# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool:
  vmImage: macOS-11

steps:
- task: CacheBeta@0
  displayName: 'Caching System Images for AVD'
  inputs:
    key: 'AVD_IMAGES_PIXEL_28'
    path: '$(ANDROID_HOME)/system-images'
    cacheHitVar: 'AVD_IMAGES_RESTORED'
  continueOnError: true
  condition: succeededOrFailed()
- bash: |
    echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;android-28;google_apis;x86'
  displayName: 'Download and install emulator image'
  condition: ne(variables.AVD_IMAGES_RESTORED, 'true')
- bash: |
    echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n android_emulator -k 'system-images;android-28;google_apis;x86' -d 17 --force
    echo "Emulator created successfully $(ANDROID_HOME/emulator/emulator -list-avds), launching it"
    nohup $ANDROID_HOME/emulator/emulator -avd android_emulator -skin 1080x1920 -no-snapshot -no-audio -no-boot-anim -accel auto -gpu auto -qemu -lcd-density 420 > /dev/null 2>&1 &
    $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done'
    $ANDROID_HOME/platform-tools/adb devices
    echo "Emulator started"
  displayName: 'Create and start emulator'
- task: NodeTool@0
  inputs:
    versionSpec: '16.x'
  displayName: 'Install Node.js'

- script: |
    npm install
  displayName: 'npm install and build'
- bash: |
    npm install -g appium
  displayName: 'Install appium'
- task: CmdLine@2
  inputs:
    script: |
      #!/usr/bin/env bash
      env
      touch ~/.android/repositories.cfg
      echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install "platforms;android-23" "build-tools;23.0.1" "add-ons;addon-google_apis-google-23"
      echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;android-25;google_apis;x86'
      echo sdkmanager --list
      sdkmanager "emulator"
      $ANDROID_HOME/platform-tools/adb devices
      adb devices | grep "emulator-" | while read -r emulator device; do adb -s $emulator emu kill; done
      adb kill-server
      echo 'deleted'
      echo $ANDROID_HOME/platform-tools/adb devices
      echo 'Devices/n'+ $ANDROID_HOME/platform-tools/adb devices
      echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n Nexus_5_API_30 -k 'system-images;android-25;google_apis;x86' --force
      echo emulator -list-avds
      nohup $ANDROID_HOME/emulator/emulator -memory 2500 -avd Nexus_5_API_30 -skin 768x1280 -no-snapshot > /dev/null 2>&1 & $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
      echo "Emulator started"
    failOnStderr: true
  displayName: 'Emulator setup'
- script: |
    npm run testandroidbrowser
  continueOnError: true
  displayName: 'Run android mobile tests'
